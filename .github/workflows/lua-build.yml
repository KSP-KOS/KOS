name: lua-build

on:
  workflow_dispatch:
    inputs:
      push:
        default: true
        type: boolean
        description: "Push built dynamic libraries"
  workflow_call:
    inputs:
      push:
        default: true
        type: boolean
        description: "Push built dynamic libraries"
permissions:
  contents: write

env:
  LUA_SOURCE_DIR: ${{ github.workspace }}/src/kOS/Lua/lua
  LUA_BUILD_DIR: ${{ github.workspace }}/src/kOS/Lua/lua/_build
  LUA_OUTPUT_DIR: ${{ github.workspace }}/src/kOS/Lua/include
  
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
          
      - name: Set vars
        id: vars
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            echo "LUA_LIB_NAME=liblua54.so" >> "$GITHUB_OUTPUT"
            echo "LUA_LIB_PATH=$LUA_BUILD_DIR/lib64/liblua54.so" >> "$GITHUB_OUTPUT"
          elif [ "$RUNNER_OS" == "Windows" ]; then
            echo "LUA_LIB_NAME=lua54.dll" >> "$GITHUB_OUTPUT"
            echo "LUA_LIB_PATH=$LUA_BUILD_DIR/bin64/lua54.dll" >> "$GITHUB_OUTPUT"
          elif [ "$RUNNER_OS" == "macOS" ]; then
            echo "LUA_LIB_NAME=liblua54.dylib" >> "$GITHUB_OUTPUT"
            echo "LUA_LIB_PATH=$LUA_BUILD_DIR/lib64/liblua54.dylib" >> "$GITHUB_OUTPUT"
          fi
          
      - name: Configure CMake
        shell: bash
        run: cmake -S $LUA_SOURCE_DIR -B $LUA_BUILD_DIR

      - name: Build
        shell: bash
        run: cmake --build $LUA_BUILD_DIR --config Release

      - name: Test
        shell: bash
        if: matrix.os != 'windows-latest' # TODO: fix test
        working-directory: ${{ env.LUA_BUILD_DIR }}
        run: ctest --build-config Release

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.vars.outputs.LUA_LIB_NAME }}
          if-no-files-found: error
          retention-days: 7
          path: ${{ steps.vars.outputs.LUA_LIB_PATH }}
  
  push:
    runs-on: ubuntu-latest
    needs: build
    if: inputs.push
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
          
      - name: Clear output directory
        run: rm -rf $LUA_OUTPUT_DIR
        
      - uses: actions/download-artifact@v4
        with:
          merge-multiple: 'true'
          path: ${{ env.LUA_OUTPUT_DIR }}
          
      - name: Push
        env:
          GIT_COMMITTER_NAME: lua-build automation
          GIT_AUTHOR_NAME: lua-build automation
          GIT_COMMITTER_EMAIL: noreply@github.com
          GIT_AUTHOR_EMAIL: noreply@github.com
        run: |
          git add $LUA_OUTPUT_DIR
          git commit -am "Build lua"
          git push